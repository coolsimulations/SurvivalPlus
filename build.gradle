plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	maven {
		name = 'SheDaniel'
		url = 'https://maven.shedaniel.me/'
	}
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	modImplementation "dev.emi:emi:${project.emi_version}"

        implementation fileTree(dir: 'libs', include: '*.jar')

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 17
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

task packApi(type: Jar) {
	// Jar will always be updated
	outputs.upToDateWhen {false}
	// Set the jar's base name
	classifier = "API"
	
	from (sourceSets.main.allJava) {
		// Add necessary files, remove unnecessary ones.
		include 'net/coolsimulations/SurvivalPlus/api/**'
		exclude 'net/coolsimulations/SurvivalPlus/core/**'
		exclude '**/*.info'
		exclude '**/*.toml'
		exclude 'assets'
		exclude 'data'
	}

	from (sourceSets.main.output) {
		// Add necessary files, remove unnecessary ones.
		include 'net/coolsimulations/SurvivalPlus/api/**'
		exclude 'net/coolsimulations/SurvivalPlus/core/**'
		exclude '**/*.info'
		exclude '**/*.toml'
		exclude 'assets'
		exclude 'data'
	}
}

task packDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    classifier = "Dev"
    version = "${project.version}"

    println(defaultTasks)
}


artifacts {
    archives packApi
    archives packDev
}

